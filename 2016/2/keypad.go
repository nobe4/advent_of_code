/*

Run on https://play.golang.org/

Again, learning the language for this challenge, a lot can be improved, especially:
- having an array of string instead of a string to split
- finding how to use the same functions (move, get_num) with two different values (x, y, map)
- using the map sizes instead of fixed values

*/

package main

import (
	"fmt"
	"strings"
)

var (
	input = "LLULLLRLDLLLRLUURDDLRDLDURULRLUULUDDUDDLLLURRLDRRLDRRRLDUDLRDLRRDLLDUDUDUDRLUDUUDLLLRDURUDUULUDLRDUUUDUUDURLDUULLRDLULDUURUDRDDLDRLURLRURRDUURLRLUURURUUULLRLLULRUURLULURDLLRRUDLUDULDRDRLRULUURRDRULLRUUUDLRLDLUURRRURDLUDDRRUDRLUDRDLLLLLRULLDUDRLRRDDULDLRUURRRRRLDLDLRDURDRUUURDLRDDDDULURRRRDUURLULLLDLRULRDULRUDLRRLRDLLRLLLUDDLRDRURDDLLLLDUDRDLRURRDLRDDDLDULDRLRULUUDRRRUUULLLURRDDUULURULDURRLLULLDRURUUULRLRDRRUDRDRRDURRUUUULDRDDDUDLDDURLLRR|LDLRRRUURDLDDRLRRDLLULRULLLUDUUDUDLRULLDRUDRULLDULURDRDDLRURDDULLLLDLRDRDRDDURLURLURLUDRDDRDULULUDDRURRDLLDUURDRDDLRLLURRDLRDDULDLULURDRDLUDRRUUDULLULURRDUDRUUUDRULDLDURLRRUDURLDLRRUURRRURDLUDRLDUDRRUDUURURUDDUUDRDULRDLUDRRRLDRURLLRDDDLUDRDUDURDDDRRDDRRRLLRRDDLDDLRUURRURDLLDRLRRDLLUDRRRURURLRDRLLRLRLRULLRURLDLRRULLRRRDULUUULDRDLLURDDLDLRDRLUUDLLUDDLDRRLDLRUDRUDLLUURLLULURUDUDRLULLUDRURDDLDLDDUDLRDDRRURLRLLUDDUDRUURRURRULDRLDDRLLRRLDDURRDLDULLLURULLLRUURLRRRRUUULRLLLURRLRLRUDRDUUUDUUUDDLULLDLLLLDLDRULDRUUULDDDLURLDLRLULRUDDDDURDDLU|RURLURRDLDULLULDDDLRUULLUURLRUDRUDRRUDDLDDDDRRDLRURLRURLDDDUDDUURRDRULDRRRULRDRDDLRUDULRLURDUUDRRLDLRDRURDLDRRRRDRURUUDDDLLRDRDUDUDUDLLULURULRRLRURUULUULDDDDURULRULLRUDUURLURDUDLUDLUDRLLDUUDUULRLRLUUDRDULDULRURDRRRULRUDLRURDDULUDULLRLRURURUULLULDRURLLRRUUDDUUURRDLURUURULRDRRDDUDULRDDLUDLURURUURDRULLRDDLLRDDLDRDUDRRDLUURRLRLUURRULUDURLDDRLLURRDDDLDDRURULLDDRLUDDLRLURDUDULLRDULLLDLLUDDRUDRUDDUUDRDRULRL|RLRDRDULULUDLUDRDRLUDLDLLUDURULDDDUDLRURLLRLRLDLDRLDURDLRRURLULLULURLLDRRDRLUDRLRDLLULRULURRURURUULRDUDLLRDLRRRRRLUURDRRRDLRUDLLDLLDLRUUUDLLLDDDLRDULLRUUDDRLDDURRRDLRLRLDDDDLRDRULLUURUUDRRLLRLLRDDLLRURRRRDRULRRLLRLLLRLDRRLDDDURRURLDURUURRLRLRLDRURULLRLRUDLDUURDLLRLDLURUUUDLLRDRDDDDDDRLDRRRLRRRRURUDLDDRDLLURUDLRRLDDDLUDUDUULRDULULUDDULUUDLLLLRLDDUUULRLRDULURDURRRURRULURRRDRDLDDURDLURUDURRRDDRLRLUDLUDDLUULLDURLURDDUDDLRUUUDRLLDRURL|ULUDLLUDDULRUURDRURDUDUDLUURDDDRRLUDURURDRURRLDRDURLRLLRRDDRRDRRRUULURUDURUDULRRRRDDLDURRLRRDUDDDRLLLULDRLRLURRDUURDURRRURRDLUDUDDRLDLURRRDDRLLRDRDDRDURRRRLURRLUDDURRULRUDUDULDRUDDRULLUUULDURRRLDRULLURULLRUDLDUDDLDULDLUUDRULULDLLDRULLRUULDUDUUDRLRRLDLUULUDLLDDRLRRDDLLURURDULRRDDRURDRLRLULDLDURULLUUUDURURDLDUDDDDUUULUDLUURRULLDLRLURDLURLRLDDURRLDDRRRDUUULLUULDLLDLLDDRLRRUDLULDRLULDULULRRLRULUUURURUUURDUUDDURLLUDDRLRDDLUURRUULRDLDDRLULUULRDRURLUURDRDUURUDLRR"

	// First origin
	x_1 = 1
	y_1 = 1

	// Second origin
	x_2 = 0
	y_2 = 2

	// First map
	the_map_1 = [3][3]string{
		{"1", "2", "3"},
		{"4", "5", "6"},
		{"7", "8", "9"},
	}

	// Second map
	the_map_2 = [5][5]string{
		{"", "", "1", "", ""},
		{"", "2", "3", "4", ""},
		{"5", "6", "7", "8", "9"},
		{"", "A", "B", "C", ""},
		{"", "", "D", "", ""},
	}
)

// Moves both (x, y) pairs on both keypads. 
// Check the bounds and the presence of a key (empty string == no key)
func move(dir string) {

  // This is bad :(
  // I'm sad about this code...
  // But again, it works ¯\_(ツ)_/¯

	switch dir {
	case "U":
		y_1 -= 1
		y_2 -= 1

		if y_1 < 0 || the_map_1[x_1][y_1] == "" {
			y_1 += 1
		}
		if y_2 < 0 || the_map_2[x_2][y_2] == "" {
			y_2 += 1
		}

	case "D":
		y_1 += 1
		y_2 += 1

		if y_1 > 2 || the_map_1[x_1][y_1] == "" {
			y_1 -= 1
		}

		if y_2 > 4 || the_map_2[x_2][y_2] == "" {
			y_2 -= 1
		}

	case "L":
		x_1 -= 1
		x_2 -= 1

		if x_1 < 0 || the_map_1[x_1][y_1] == "" {
			x_1 += 1
		}

		if x_2 < 0 || the_map_2[x_2][y_2] == "" {
			x_2 += 1
		}

	case "R":
		x_1 += 1
		x_2 += 1

		if x_1 > 2 || the_map_1[x_1][y_1] == "" {
			x_1 -= 1
		}

		if x_2 > 4 || the_map_2[x_2][y_2] == "" {
			x_2 -= 1
		}
	}
}

// Split the current line of path, and return the chars for both keypads
func get_num(path string) (string, string) {

	for i := 0; i < len(path); i++ {
		move(string(path[i]))
	}
	return the_map_1[y_1][x_1], the_map_2[y_2][x_2]
}

// Display both values at the same time:
//   1  2
//   1  2
// ...
func main() {
	numbers := strings.Split(input, "|")
	for i := 0; i < len(numbers); i++ {
		fmt.Println(get_num(numbers[i]))
	}
}
